version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.backend
    container_name: smsbomb-backend
    ports:
      - "8000:8000"
    environment:
      - APP_NAME=SMS-POWERBOMB
      - APP_VERSION=10.0.0
      - DEBUG=False
      - ENVIRONMENT=production
      - HOST=0.0.0.0
      - PORT=8000
      - DATABASE_URL=sqlite+aiosqlite:///./data/smsbomb.db
      - CORS_ORIGINS=http://localhost,http://localhost:80,http://localhost:3000
      - SECRET_KEY=${SECRET_KEY:-change-this-in-production}
    volumes:
      - backend-data:/app/data
    networks:
      - smsbomb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: smsbomb-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - smsbomb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Redis (Optional - for production caching)
  redis:
    image: redis:7-alpine
    container_name: smsbomb-redis
    ports:
      - "6379:6379"
    networks:
      - smsbomb-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis-data:/data

networks:
  smsbomb-network:
    driver: bridge

volumes:
  backend-data:
    driver: local
  redis-data:
    driver: local